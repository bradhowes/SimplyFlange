<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1620"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "NO"
            buildForArchiving = "NO"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "C437FE39222367A6008D6C09"
               BuildableName = "SimplyFlangeHost.app"
               BlueprintName = "iOS App"
               ReferencedContainer = "container:SimplyFlange.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "NO"
            buildForArchiving = "NO"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "C437FE792223688D008D6C09"
               BuildableName = "SimplyFlange.app"
               BlueprintName = "SimplyFlange"
               ReferencedContainer = "container:SimplyFlange.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "BD1D257525D5AAB000523748"
               BuildableName = "Snapshots.xctest"
               BlueprintName = "Snapshots"
               ReferencedContainer = "container:SimplyFlange.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "C437FE39222367A6008D6C09"
            BuildableName = "SimplyFlangeHost.app"
            BlueprintName = "iOS App"
            ReferencedContainer = "container:SimplyFlange.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Flatten and code sign nested frameworks&#10;# adapted from https://forums.swift.org/t/swift-packages-in-multiple-targets-results-in-this-will-result-in-duplication-of-library-code-errors/34892/57&#10;&#10;cd &quot;${CODESIGNING_FOLDER_PATH}/Frameworks/&quot;&#10;&#10;# flatten nested frameworks by copying to APP.app/Frameworks&#10;for framework in *; do&#10;    if [ -d &quot;$framework&quot; ]; then&#10;        if [ -d &quot;${framework}/Frameworks&quot; ]; then&#10;            echo &quot;Moving embedded frameworks from ${framework} to ${PRODUCT_NAME}.app/Frameworks&quot;&#10;            cp -R &quot;${framework}/Frameworks/&quot; .&#10;            rm -rf &quot;${framework}/Frameworks&quot;&#10;        fi&#10;    fi&#10;done&#10;&#10;# remove any leftover nested frameworks (i.e. &apos;PackageName_359AFEED79E48935_PackageProduct.framework&apos;)&#10;for framework in *; do&#10;    if [ -d &quot;$framework&quot; ]; then&#10;        if [ -d &quot;${framework}/Frameworks&quot; ]; then&#10;            echo &quot;Removing embedded frameworks from ${framework} to ${PRODUCT_NAME}.app/Frameworks&quot;&#10;            rm -rf &quot;${framework}/Frameworks&quot;&#10;        fi&#10;    fi&#10;done&#10;&#10;# codesign for Debugging on device&#10;if [ &quot;${CONFIGURATION}&quot; == &quot;Debug&quot; ] &amp; [ &quot;${SDKROOT}&quot; != *Simulator* ] ; then&#10;&#10;    echo &quot;Code signing frameworks...&quot;&#10;    find &quot;${CODESIGNING_FOLDER_PATH}/Frameworks&quot; -maxdepth 1 -name &apos;*.framework&apos; -print0 | while read -d $&apos;\0&apos; framework&#10;    do&#10;        # only sign frameworks without a signature&#10;        if ! codesign -v &quot;${framework}&quot;; then&#10;            codesign --force --sign &quot;${EXPANDED_CODE_SIGN_IDENTITY}&quot; --preserve-metadata=identifier,entitlements --timestamp=none &quot;${framework}&quot;&#10;            echo &quot;Added missing signature to &apos;${framework}&apos;&quot;&#10;        fi&#10;    done&#10;fi&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "C437FE39222367A6008D6C09"
                     BuildableName = "SimplyFlangeHost.app"
                     BlueprintName = "iOS App"
                     ReferencedContainer = "container:SimplyFlange.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PostActions>
   </ArchiveAction>
</Scheme>
